# System (Default)
import sys
#   Add access if it is not in the system path.
if '../' + 'src' not in sys.path:
    sys.path.append('..')
# OS (Operating system interfaces)
import os
# OpenCV (Computer Vision) [pip3 install opencv-python]
import cv2
# ...
import albumentations as A
# Custom Library:
#   ../Lib/Utilities/File_IO
import Lib.Utilities.File_IO as File_IO


# https://pytorch.org/vision/0.11/auto_examples/plot_transforms.html
# https://pseudo-lab.github.io/Tutorial-Book-en/chapters/en/object-detection/Ch3-preprocessing.html
# https://github.com/aladdinpersson/Machine-Learning-Collection/blob/master/ML/Pytorch/Basics/pytorch_transforms.py

img = cv2.imread('/Users/rparak/Documents/GitHub/Blender_Synthetic_Data/images/Image_00001.png')
label_data = File_IO.Load('/Users/rparak/Documents/GitHub/Blender_Synthetic_Data/images/Image_00001', 'txt', ' ')[0]

#img = Image.open('/Users/rparak/Documents/GitHub/Blender_Synthetic_Data/images/Image_00001.png')

# You may need to convert the color.
img_raw = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)

# Load Data
tsf = A.Compose([A.Affine(translate_px={'x': (-25, 25), 'y': (-25, 25)}, p = 0.75),
                 A.ColorJitter(brightness=(0.5, 1.5), contrast=(0.5, 1.5), saturation=(0.1, 0.5), always_apply=True),
                 A.GaussianBlur(blur_limit=(5, 5), sigma_limit=(0.01, 1.0), p = 0.25),
                 A.RandomResizedCrop(height= 1544, width = 2064, scale = (0.95, 1.0), p = 0.5)], bbox_params=A.BboxParams(format='yolo', label_fields=['class_labels']))

# Augment an image
transformed = tsf(image=img_raw, bboxes = [label_data[1::]], class_labels=[label_data[0]])
transformed_image = transformed["image"]
transformed_bboxes = transformed['bboxes']
transformed_class_labels = transformed['class_labels']
#print(int(transformed_class_labels[0]))
#print(transformed_bboxes)

#print(np.hstack((int(transformed_class_labels[0]), transformed_bboxes[0])))


#print(torch.as_tensor(label_data, dtype=torch.float32))
#print(tsf(label_data))


cv2.imwrite('/Users/rparak/Documents/GitHub/Blender_Synthetic_Data/images/Image_00002.png', transformed_image)
# Displays the image in the window.
#cv2.imshow('Synthetic Data Generated by Blender', img_n)
#cv2.waitKey(0)
#cv2.destroyAllWindows()


